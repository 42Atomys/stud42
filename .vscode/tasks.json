{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "shell",
      "command": "task generate",
      "problemMatcher": ["$go"],
      "label": "Generate API code",
      "detail": "Generate code on API",
      "icon": {
        "id": "rocket",
        "color": "terminal.ansiYellow"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "type": "shell",
      "command": "yarn --cwd web/ui generate",
      "problemMatcher": ["$tsc"],
      "label": "Generate Interface code",
      "detail": "Generate code on Interface",
      "icon": {
        "id": "rocket",
        "color": "terminal.ansiYellow"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Generate all",
      "detail": "Generate the code on API and on the Interface",
      "dependsOrder": "parallel",
      "dependsOn": ["Generate API code", "Generate Interface code"],
      "icon": {
        "id": "rocket",
        "color": "terminal.ansiYellow"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "Start project",
      "detail": "Start all services in background",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Start API",
        "Start Interface",
        "Start Authorization Service"
      ],
      "icon": {
        "id": "rocket",
        "color": "terminal.ansiCyan"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "Start API",
      "detail": "Start API in background",
      "type": "shell",
      "isBackground": true,
      "command": "env",
      "args": ["APP_NAME=api", "go", "run", "main.go", "serve", "api", "-g"],
      "problemMatcher": ["$go"],
      "icon": {
        "id": "symbol-event",
        "color": "terminal.ansiCyan"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Start Interface",
      "detail": "Start Interface in background",
      "type": "shell",
      "isBackground": true,
      "command": "yarn",
      "args": ["--cwd", "web/ui", "dev"],
      "icon": {
        "id": "symbol-event",
        "color": "terminal.ansiCyan"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Start Authorization Service",
      "detail": "Start Authorization service in background",
      "type": "shell",
      "isBackground": true,
      "command": "env",
      "args": ["APP_NAME=auth", "go", "run", "main.go", "serve", "auth"],
      "problemMatcher": ["$go"],
      "icon": {
        "id": "symbol-event",
        "color": "terminal.ansiCyan"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint API",
      "detail": "Lint the API with golangci-lint",
      "type": "shell",
      "command": "golangci-lint",
      "args": ["run"],
      "problemMatcher": ["$go"],
      "icon": {
        "id": "symbol-customcolor",
        "color": "terminal.ansiMagenta"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint Interface",
      "detail": "Lint (autofix with make-pretty) the Interface with tslint, nextjs lint and prettier",
      "type": "shell",
      "dependsOrder": "sequence",
      "dependsOn": ["Format Interface"],
      "command": "yarn",
      "args": ["--cwd", "web/ui", "style:all"],
      "icon": {
        "id": "symbol-customcolor",
        "color": "terminal.ansiMagenta"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Format Interface",
      "detail": "Format the Interface",
      "type": "shell",
      "command": "yarn",
      "args": ["--cwd", "web/ui", "make-pretty"],
      "icon": {
        "id": "circuit-board",
        "color": "terminal.ansiGreen"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Test Interface",
      "detail": "Run the test suite on the Interface (CI Mode)",
      "type": "shell",
      "command": "yarn",
      "args": ["--cwd", "web/ui", "test:ci"],
      "icon": {
        "id": "beaker",
        "color": "terminal.ansiBlue"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Test Interface",
      "detail": "Run the test suite on the Interface (Watch Mode)",
      "type": "shell",
      "command": "yarn",
      "args": ["--cwd", "web/ui", "test"],
      "icon": {
        "id": "beaker",
        "color": "terminal.ansiBlue"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Test API",
      "detail": "Run the test suite on the backend",
      "type": "shell",
      "command": "go",
      "args": [
        "test",
        "./...",
        "-coverprofile",
        "coverage.out",
        "-covermode",
        "count"
      ],
      "icon": {
        "id": "beaker",
        "color": "terminal.ansiBlue"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "Run postgresql cli (psql)",
      "detail": "Execute psql on container",
      "type": "shell",
      "isBackground": true,
      "command": "psql",
      "icon": {
        "id": "debug-start",
        "color": "terminal.ansiRed"
      },
      "problemMatcher": [],
      "args": ["-h", "database", "-U", "postgres", "-d", "s42"],
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Run dragonfly cli (redis-cli)",
      "detail": "Execute redis-cli on container",
      "type": "shell",
      "isBackground": true,
      "command": "redis-cli",
      "icon": {
        "id": "debug-start",
        "color": "terminal.ansiRed"
      },
      "problemMatcher": [],
      "args": ["-h", "dragonfly", "-p", "6379"],
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Populate DB with campus",
      "detail": "Execute the campus crawler to populate your development database with campus (need 42 credentials)",
      "type": "shell",
      "isBackground": true,
      "command": "env",
      "args": [
        "APP_NAME=api",
        "go",
        "run",
        "main.go",
        "jobs",
        "crawler",
        "campus"
      ],
      "problemMatcher": ["$go"],
      "icon": {
        "id": "database",
        "color": "terminal.ansiGreen"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "Populate DB with active locations (Paris)",
      "detail": "Execute the locations crawler to populate your development database with locations of paris (need 42 credentials)",
      "type": "shell",
      "isBackground": true,
      "command": "env",
      "args": [
        "APP_NAME=api",
        "go",
        "run",
        "main.go",
        "jobs",
        "crawler",
        "locations",
        "-c",
        "1"
      ],
      "problemMatcher": ["$go"],
      "icon": {
        "id": "database",
        "color": "terminal.ansiGreen"
      },
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      }
    }
  ]
}

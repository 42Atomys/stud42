apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhooked
  labels:
    app: webhooked
    version: "0.6.4"
    app.kubernetes.io/name: webhooked
    app.kubernetes.io/version: "0.6.4"
spec:
  # replicas: 1
  # revisionHistoryLimit: 2
  # strategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #     maxUnavailable: 0
  #     maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhooked
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webhooked
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/path: /metrics
      #   prometheus.io/port: "8080"
    spec:
      containers:
        # - name: webhooked
        # image: atomys/webhooked:0.6.4
        # imagePullPolicy: IfNotPresent
        # livenessProbe:
        #   httpGet:
        #     path: /metrics
        #     port: 8080
        # readinessProbe:
        #   httpGet:
        #     path: /metrics
        #     port: 8080
        # env:
        # - name: RABBITMQ_USER
        #   valueFrom:
        #     secretKeyRef:
        #       key: username
        #       name: prod-primary-rabbitmq-default-user
        # - name: RABBITMQ_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       key: password
        #       name: prod-primary-rabbitmq-default-user
        # - name: RABBITMQ_DATABASE_URL
        #   value: "amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@prod-primary-rabbitmq.production.svc.cluster.local:5672/"
        # - name: WEBHOOK_SECRET_HEADER
        #   valueFrom:
        #     secretKeyRef:
        #       key: WEBHOOK_SECRET_HEADER
        #       name: s42-webhooked-secrets
        # - name: GITHUB_WEBHOOK_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       key: GITHUB_WEBHOOK_SECRET
        #       name: s42-webhooked-secrets
        # resources:
        #   requests:
        #     memory: "10Mi"
        #     cpu: "20m"
        #   limits:
        #     memory: "25Mi"
        #     cpu: "30m"
        # ports:
        # - containerPort: 8080
        #   name: http
      #   volumeMounts:
      #     - mountPath: /config/webhooks.yaml
      #       name: configuration
      #       subPath: webhooks.yaml
      #     - mountPath: /config/template.tpl
      #       name: configuration
      #       subPath: template.tpl
      # volumes:
      #   - name: configuration
      #     configMap:
      #       name: webhooked

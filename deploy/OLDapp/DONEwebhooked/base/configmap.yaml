# Configuration Map for deployment.yaml
# Edit it to change the configuration of your proxy
# Don't forget to restart your proxy after changing it
#
# Path: examples/kubernetes/deployment.yaml
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: webhooked
# data:
#   template.tpl: |
#     {
#       "metadata": {
#         "specName": "{{ .Spec.Name }}",
#         "model": "{{ .Request.Header | getHeader "X-Model" }}",
#         "event": "{{ .Request.Header | getHeader "X-Event" }}",
#         "deliveryID": "{{ .Request.Header | getHeader "X-Delivery" | default "unknown" }}"
#       },
#       "payload": {{ .Payload }}
#     }
#   webhooks.yaml: |
#     apiVersion: v1alpha1
#     observability:
#       metricsEnabled: true
#     specs:
#     - name: users-create
#       entrypointUrl: /users/create
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: users-update
#       entrypointUrl: /users/update
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: locations-create
#       entrypointUrl: /locations/create
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: locations-close
#       entrypointUrl: /locations/close
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: locations-destroy
#       entrypointUrl: /locations/destroy
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: campus-users-create
#       entrypointUrl: /campus_users/create
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: campus-users-update
#       entrypointUrl: /campus_users/update
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: campus-users-destroy
#       entrypointUrl: /campus_users/destroy
#       security:
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Secret
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             valueFrom:
#               envRef: WEBHOOK_SECRET_HEADER
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true
#     - name: github-sponsorships
#       entrypointUrl: /github/sponsors
#       security:
#       - generateHmac256:
#           inputs:
#           - name: payload
#             value: '{{ .Inputs.payload }}'
#           - name: secret
#             valueFrom:
#               envRef: GITHUB_WEBHOOK_SECRET
#       - header:
#           inputs:
#           - name: headerName
#             value: X-Hub-Signature-256
#       - compare:
#           inputs:
#           - name: first
#             value: '{{ .Outputs.header.value }}'
#           - name: second
#             value: 'sha256={{ .Outputs.generate_hmac_256.value }}'
#       formatting:
#         templatePath: /config/template.tpl
#       storage:
#       - type: rabbitmq
#         specs:
#           databaseUrl:
#             valueFrom:
#               envRef: RABBITMQ_DATABASE_URL
#           queueName: webhooks-deliveries
#           contentType: application/json
#           durable: true

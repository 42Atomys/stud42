---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana"]
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
      containers:
        # - name: renderer
        #   image: grafana/grafana-image-renderer:3.6.1
        #   resources:
        #     requests:
        #       cpu: 700m
        #       memory: 1Gi
        #     limits:
        #       cpu: 800m
        #       memory: 1500Mi
        - name: grafana
          image: grafana/grafana:9.1.6
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SERVER_ROOT_URL
              value: https://dashboard.s42.app
            # - name: GF_RENDERING_SERVER_URL
            #   value: http://127.0.0.1:8081/render
            # - name: GF_RENDERING_CALLBACK_URL
            #   value: http://grafana:3000/
            # - name: GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE
            #   value: "true"
            # - name: GF_UNIFIED_ALERTING_ENABLED
            #   value: "true"
            # - name: GF_LOG_FILTERS
            #   value: rendering:debug
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc

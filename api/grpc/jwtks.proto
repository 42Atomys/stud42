syntax = "proto3";

option go_package = "internal/jwtks";

package jwtks;

/**
 * JWTKSService is the service that handles all grpc requests 
 * for the JWTKSService. It is responsible for generating and
  * validating JWT tokens, using tje JWKS strategy.
  */
service JWTKSService {
  /**
   * SignPayload generates a JWT token using the JWKS strategy.
   * @param request The request containing the payload to insert into the JWT.
   * @return The Reply containing the generated JWT token and her validity.
   */
  rpc SignPayload (SignPayloadRequest) returns (Reply) {}

  /**
   * ValidateToken validates a JWT token using the JWKS strategy.
   * @param request The request containing the ValidateRequest.
   * @return The Reply containing the validation result and the refresh token if needed
   */
  rpc ValidateToken (ValidateRequest) returns (Reply) {}
}

message SignPayloadRequest {
  // The payload to insert into the JWT.
  string payload = 1;
}

message ValidateRequest {
  // The token to validate.
  string token = 1;
  // Regenerate the token or not. (Default false)
  bool regenerate = 2;
}

message Reply {
  // The generated token.
  string token = 1;
  // The validity of the token.
  bool valid = 2;
}
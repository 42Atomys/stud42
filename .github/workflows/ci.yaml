name: CI/CD ðŸš€
on:
  release:
    types: [prereleased, released]
  pull_request:
    types: [ready_for_review, synchronize, reopened, labeled]
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ###############################
  ########### LINTERS ###########
  ###############################
  linters:
    name: "Linters ðŸ§¹"
    uses: ./.github/workflows/linters.yaml
  ###############################
  ############ TESTS ############
  ###############################
  tests:
    name: Tests ðŸ§ª
    uses: ./.github/workflows/tests.yaml
    secrets: inherit
  ###############################
  ############ BUILD ############
  ###############################
  build:
    name: "Build ðŸ”§"
    uses: ./.github/workflows/build.yaml
  ###############################
  ########### DEPLOY ############
  ###############################

  deploy:
    name: "Deploy ðŸš€"
    needs: [linters, tests, build]
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    if: |
      github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'needs-preview-deploy'))
    with:
      ghEnvironmentName: "${{ github.event_name == 'pull_request' && 'previews' || (github.event_name == 'release' && github.event.action == 'released' && 'production' || (github.event_name == 'release' && github.event.action == 'prereleased' && 'staging' || 'sandbox')) }}"
      friendlyEnvironmentName: "${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || (github.event_name == 'release' && github.event.action == 'released' && 'production' || (github.event_name == 'release' && github.event.action == 'prereleased' && 'staging' || 'sandbox')) }}"
      kubeNamespace: "${{ github.event_name == 'pull_request' && 's42-previews' || (github.event_name == 'release' && github.event.action == 'released' && 's42-production' || (github.event_name == 'release' && github.event.action == 'prereleased' && 's42-staging' || 's42-sandbox')) }}"
      imageTag: ${{ needs.build.outputs.imageTag }}

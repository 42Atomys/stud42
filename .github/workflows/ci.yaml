name: CI/CD ðŸš€
on:
  release:
    types: [prereleased, released]
  pull_request:
    types: [ready_for_review, synchronize, reopened, labeled]
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ###############################
  ########### LINTERS ###########
  ###############################
  linters:
    name: "Linters ðŸ§¹"
    uses: ./.github/workflows/linters.yaml
  ###############################
  ############ TESTS ############
  ###############################
  tests:
    name: Tests ðŸ§ª
    uses: ./.github/workflows/tests.yaml
    secrets: inherit
  ###############################
  ############ BUILD ############
  ###############################
  build:
    name: "Build ðŸ”§"
    needs: [linters, tests]
    uses: ./.github/workflows/build.yaml
  ###############################
  ########### DEPLOY ############
  ###############################

  detect_stack_to_deploy:
    name: "Detect stack to deploy ðŸ“¦"
    needs: [linters, tests]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      stacks: ${{ steps.detected_stack.outputs.stacks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect stack to deploy
        id: detect_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            pre-cluster:
              - 'deploy/stacks/pre-cluster/**'
            cluster:
              - 'deploy/stacks/cluster/**'
      - name: Expose stack to deploy
        uses: actions/github-script@v6
        id: detected_stack
        with:
          script: |
            let stacks = [];
            if (context.eventName == 'release' && context.payload.action == 'released') {
              stacks = Object.keys(steps.detect_changes.outputs.filter( (stack) => stack == true ));
            }
            stacks.push('apps');

            console.log(`Stack to deploy: ${stack}`);
            core.setOutput('stacks', stacks);

  deploy:
    name: "Deploy ðŸš€"
    needs: [build, detect_stack_to_deploy]
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    if: |
      github.event_name == 'release' ||
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'needs-preview-deploy'))
    with:
      ghEnvironmentName: "${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || (github.event_name == 'release' && github.event.action == 'released' && 'production' || 'staging') }}"
      kubeNamespace: "${{ github.event_name == 'pull_request' && 'previews' || (github.event_name == 'release' && github.event.action == 'released' && 'production' || 'staging') }}"
      stacks: "${{ needs.detect_stack_to_deploy.outputs.stacks }}"
      imageTag: ${{ needs.build.outputs.imageTag }}

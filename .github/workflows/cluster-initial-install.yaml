name: 'K8S Cluster - Install ðŸ¤–'
on: 
  workflow_dispatch:
    inputs:
      install_istio:
        type: boolean
        required: true
        description: (Re)Install Istio ?
      install_cert_manager:
        type: boolean
        required: true
        description: (Re)Install Cert Manager ?

jobs:
  core_install:
    runs-on: ubuntu-latest
    name: Install the core of the cluster
    steps:
    - uses: actions/checkout@v3
    - uses: azure/setup-kubectl@v2.0
    - uses: azure/setup-helm@v1
    - uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_ADMIN }}
        cluster-type: generic
    - run: kubectl apply -f deploy/cluster/namespaces
    - run: ls -1 deploy/cluster/rbac/deployer*.yaml | xargs -l kubectl apply -f
    - name: Install istio
      if: ${{ github.event.inputs.install_istio == 'true' }} 
      run: |
        curl -L https://istio.io/downloadIstio | sh -
        istioctl install -y 
    - name: Install cert-manager
      if: ${{ github.event.inputs.install_cert_manager == 'true' }} 
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml
        git clone https://github.com/baarde/cert-manager-webhook-ovh.git
        cd cert-manager-webhook-ovh
        helm install cert-manager-webhook-ovh ./deploy/cert-manager-webhook-ovh --set groupName='acme.s42.app'
    - name: Create ovh-credentials secrets for cert-manager
      uses: azure/k8s-create-secret@v2
      if: ${{ github.event.inputs.install_cert_manager == 'true' }} 
      with:
        namespace: cert-manager
        secret-type: Opaque
        secret-name: ovh-credentials
        string-data: ${{ secrets.SECRET__OVH_CREDENTIALS_SECRET_KEY }}
    - run: |
        kubectl apply -f \
        deploy/cluster/cert-manager/issuers \
        deploy/cluster/cert-manager/certificates \
        deploy/cluster/istio/gateways

  update_secrets:
    name: Install cross cluster secrets
    runs-on: ubuntu-latest
    needs: core_install
    strategy:
      fail-fast: true
      matrix:
        namespace: [ review-apps, staging, sandbox, production ]
    steps:
    - uses: azure/setup-kubectl@v2.0
    - uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_ADMIN }}
        cluster-type: generic
    - name: Create docker-registry secret for GitHub Packages on ${{ matrix.namespace }}
      run: |
        kubectl create secret docker-registry ghcr-creds \
          --namespace=${{ matrix.namespace }} \
          --docker-username=${{ github.repository_owner }} \
          --docker-password=${{ secrets.SECRET__GHCR_TOKEN }} \
          --docker-server=ghcr.io
name: Tests - Frontend ðŸ•¹
on:
  pull_request:
    paths:
    - 'web/ui/**'
  push:
    branches:
    - main
    paths:
    - 'web/ui/**'

defaults:
  run:
    working-directory: 'web/ui'

jobs:
  linters:
    name: Frontend Linters ðŸ•¹
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Install protoc
      run: |
        wget -O /tmp/protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.20.0/protoc-3.20.0-linux-x86_64.zip
        unzip -ud /tmp/protoc /tmp/protoc.zip
        mv /tmp/protoc/bin/protoc /usr/local/bin/protoc
    - name: Generate code
      run: yarn generate

    - name: ESLint
      run: yarn style:lint

    - name: Prettier
      run: yarn style:prettier
  tests:
    name: Frontend Tests ðŸ•¹
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Jest
      run: yarn test:ci

    - name: Quality Gate - Test coverage shall be above threshold
      env:
          TESTCOVERAGE_THRESHOLD: 80
      run: |
        echo "Quality Gate: checking test coverage is above threshold ..."
        echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
        totalCoverage=`cat coverage/coverage-summary.json | jq '.total.statements.pct'`
        echo "Current test coverage : $totalCoverage %"
        if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "OK"
        else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
        fi
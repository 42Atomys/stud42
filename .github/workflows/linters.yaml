name: "Linters"
on:
  workflow_call:

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["pre-cluster", "cluster", "apps", "sandbox"]
    defaults:
      run:
        working-directory: "deploy/stacks/${{ matrix.stack }}"
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Format
        env:
          # Sandbox is not deployed to the production workspace.
          TF_WORKSPACE: ${{ matrix.stack == 'sandbox' && 'sandbox' || 'production' }}
        run: terraform fmt -check=true -recursive

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
      - name: Setup protoc
        uses: arduino/setup-protoc@v1
        with:
          # TODO: Update to latest version when the issue
          # https://github.com/arduino/setup-protoc/issues/33
          # has been fixed
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate code
        run: make -f build/Makefile generate
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.4.0
        with:
          version: latest
          skip-pkg-cache: true
          args: -v

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "web/ui"
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install protoc
        run: |
          wget -O /tmp/protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.20.0/protoc-3.20.0-linux-x86_64.zip
          unzip -ud /tmp/protoc /tmp/protoc.zip
          mv /tmp/protoc/bin/protoc /usr/local/bin/protoc
      - name: Generate code
        run: yarn generate

      - name: ESLint
        run: yarn style:lint

      - name: Prettier
        run: yarn style:prettier

      - name: TypeScript
        run: yarn style:ts
